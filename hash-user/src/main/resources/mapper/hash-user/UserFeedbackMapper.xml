<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.hashuser.mapper.UserFeedbackMapper">
    
    <resultMap type="UserFeedback" id="UserFeedbackResult">
        <result property="id"    column="id"    />
        <result property="code"    column="code"    />
        <result property="userId"    column="user_id"    />
        <result property="nickName"    column="nick_name"    />
        <result property="content"    column="content"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectUserFeedbackVo">
        select id, code, user_id, nick_name, content, create_time from t_user_feedback
    </sql>

    <select id="selectUserFeedbackList" parameterType="UserFeedback" resultMap="UserFeedbackResult">
        <include refid="selectUserFeedbackVo"/>
        <where>  
            <if test="code != null "> and code = #{code}</if>
            <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
            <if test="nickName != null  and nickName != ''"> and nick_name like concat('%', #{nickName}, '%')</if>
            <if test="createTime != null "> and create_time >= #{createTime}</if>
        </where>
    </select>
    
    <select id="selectUserFeedbackById" parameterType="String" resultMap="UserFeedbackResult">
        <include refid="selectUserFeedbackVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertUserFeedback" parameterType="UserFeedback">
        insert into t_user_feedback
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="code != null">code,</if>
            <if test="userId != null">user_id,</if>
            <if test="nickName != null">nick_name,</if>
            <if test="content != null">content,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="code != null">#{code},</if>
            <if test="userId != null">#{userId},</if>
            <if test="nickName != null">#{nickName},</if>
            <if test="content != null">#{content},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateUserFeedback" parameterType="UserFeedback">
        update t_user_feedback
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null">code = #{code},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="nickName != null">nick_name = #{nickName},</if>
            <if test="content != null">content = #{content},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUserFeedbackById" parameterType="String">
        delete from t_user_feedback where id = #{id}
    </delete>

    <delete id="deleteUserFeedbackByIds" parameterType="String">
        delete from t_user_feedback where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>