<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.wallet.mapper.WalletWithdrawOrderMapper">
    
    <resultMap type="WalletWithdrawOrder" id="WalletWithdrawOrderResult">
        <result property="id"    column="id"    />
        <result property="walletType"    column="wallet_type"    />
        <result property="walletAddress"    column="wallet_address"    />
        <result property="amount"    column="amount"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectWalletWithdrawOrderVo">
        select id, wallet_type, wallet_address, amount, status, create_time, update_time from t_wallet_withdraw_order
    </sql>

    <select id="selectWalletWithdrawOrderList" parameterType="WalletWithdrawOrder" resultMap="WalletWithdrawOrderResult">
        <include refid="selectWalletWithdrawOrderVo"/>
        <where>  
            <if test="id != null  and id != ''"> and id = #{id}</if>
            <if test="walletType != null  and walletType != ''"> and wallet_type = #{walletType}</if>
            <if test="walletAddress != null  and walletAddress != ''"> and wallet_address = #{walletAddress}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="createTime != null "> and create_time = #{createTime}</if>
        </where>
    </select>
    
    <select id="selectWalletWithdrawOrderById" parameterType="String" resultMap="WalletWithdrawOrderResult">
        <include refid="selectWalletWithdrawOrderVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertWalletWithdrawOrder" parameterType="WalletWithdrawOrder">
        insert into t_wallet_withdraw_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="walletType != null">wallet_type,</if>
            <if test="walletAddress != null">wallet_address,</if>
            <if test="amount != null">amount,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="walletType != null">#{walletType},</if>
            <if test="walletAddress != null">#{walletAddress},</if>
            <if test="amount != null">#{amount},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateWalletWithdrawOrder" parameterType="WalletWithdrawOrder">
        update t_wallet_withdraw_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="walletType != null">wallet_type = #{walletType},</if>
            <if test="walletAddress != null">wallet_address = #{walletAddress},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteWalletWithdrawOrderById" parameterType="String">
        delete from t_wallet_withdraw_order where id = #{id}
    </delete>

    <delete id="deleteWalletWithdrawOrderByIds" parameterType="String">
        delete from t_wallet_withdraw_order where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>